version: 1.0.0
groups:
  - name: default
    targets:
      clean:
        help: Clean unnecessary temporary files
        run: |
          rm -fr build/
          rm -fr dist/
          rm -fr .eggs/
          find . -name '*.egg-info' -exec rm -fr {} +
          find . -name '*.egg' -exec rm -f {} +
          find . -name '*.pyc' -exec rm -f {} +
          find . -name
          find . -name '__pycache__' -exec rm -fr '*.pyo' -exec rm -f {} +
          find . -name '*~' -exec rm -f {} +{} +
          rm -f .coverage
          rm -fr htmlcov/
          rm -fr .pytest_cache

  - name: docs
    env-file: .env
    targets:
      build:
        help: Build documentation
        run: |
          mkdocs build --config-file docs/mkdocs.yaml

      preview:
        help: Preview documentation page locally
        run: mkdocs serve --watch docs --config-file docs/mkdocs.yaml

  - name: release
    env-file: .env
    vars:
      app: |
        npx --yes \
        -p semantic-release \
        -p "@semantic-release/commit-analyzer" \
        -p "@semantic-release/release-notes-generator" \
        -p "@semantic-release/changelog" \
        -p "@semantic-release/exec" \
        -p "@semantic-release/github" \
        -p "@semantic-release/git" \
        -p "@google/semantic-release-replace-plugin" \
        semantic-release

    targets:
      ci:
        help: Run semantic release on CI
        run: {{ app }} '--ci'

      dry:
        help: Run semantic release in dry-run mode
        run: {{ app }} '--dry-run'

  - name: tests
    targets:
      lint:
        help: Run linter tools
        run: pre-commit run --all-files --verbose

      unittest:
        help: Run tests
        run: pytest

      makim-file-simple:
        help: Test makim using a simple makimfile
        env:
          MAKIM_FILE: ./tests/.makim-simple.yaml
        run: |
          makim --makim-file $MAKIM_FILE --help
          makim --makim-file $MAKIM_FILE --version
          makim --makim-file $MAKIM_FILE clean --verbose
          makim --makim-file $MAKIM_FILE default.clean --verbose
          makim --makim-file $MAKIM_FILE build --verbose
          makim --makim-file $MAKIM_FILE default.build --verbose
          makim --makim-file $MAKIM_FILE build --clean --verbose

      makim-file-complex:
        help: Test makim using a complex makimfile
        env:
          MAKIM_FILE_ARG: --makim-file ./tests/.makim-complex.yaml
        run: |
          makim $MAKIM_FILE_ARG --help
          makim $MAKIM_FILE_ARG --version
          makim $MAKIM_FILE_ARG default.lint --verbose
          makim $MAKIM_FILE_ARG build.clean-gcda --verbose
          makim $MAKIM_FILE_ARG build.clean --verbose
          makim $MAKIM_FILE_ARG build.install --verbose
          makim $MAKIM_FILE_ARG build.release --verbose
          makim $MAKIM_FILE_ARG build.release --build-type debug --verbose
          makim $MAKIM_FILE_ARG build.release --extras '-D' --verbose
          makim $MAKIM_FILE_ARG build.release --clean --verbose
          makim $MAKIM_FILE_ARG build.dev --verbose
          makim $MAKIM_FILE_ARG env.create-file --verbose
          makim $MAKIM_FILE_ARG conda.build --verbose
          makim $MAKIM_FILE_ARG release.ci --verbose
          makim $MAKIM_FILE_ARG release.dry --verbose
          makim $MAKIM_FILE_ARG docs.api --verbose
          makim $MAKIM_FILE_ARG docs.build --verbose
          makim $MAKIM_FILE_ARG docs.clean --verbose
          makim $MAKIM_FILE_ARG docs.preview --verbose
          makim $MAKIM_FILE_ARG tests.sanitizer --verbose
          makim $MAKIM_FILE_ARG tests.code-coverage --verbose
          makim $MAKIM_FILE_ARG tests.gen-object --verbose
          makim $MAKIM_FILE_ARG tests.gen-ast --verbose
          makim $MAKIM_FILE_ARG tests.gen-llvm-ir --verbose
          makim $MAKIM_FILE_ARG tests.examples --verbose
          makim $MAKIM_FILE_ARG tests.all --verbose
          makim $MAKIM_FILE_ARG debug.fibonacci --verbose
          makim $MAKIM_FILE_ARG print.local-env-vars --verbose
          makim $MAKIM_FILE_ARG print.makim-env-vars --verbose
          makim $MAKIM_FILE_ARG print.dotenv-var --verbose
